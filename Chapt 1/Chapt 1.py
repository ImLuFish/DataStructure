"""
1.3 表达式、运算符和优先级
【逻辑运算】
    not
    and
    or
    is
    is not
    ==
    !=
    (注: <>不可用)
【比较运算】
    >
    <
    >=
    <=
【算数运算】
    + - + /
    // 整除
    % 模运算
    ** 乘方、开根号
【位运算】
    ~ 非
    & 与
    | 或
    ^ 异或（注意：乘方是**）
    <<
    >>
【序列运算符】
    s[i]
    s[i: j] 索引为[i, j)的切片
    s[i: j: k] 切片，步长为k，步长可为负数
    s + t 序列的连接
    k * s 序列s连接k次

    val in s （可以用于判断字符串中的子串） "amp" in "example"
    val not in s

    注：
    s[i] = val
    del s[i]
    del s[i: j]
    s[1: 3] = [2, 3]
    s[1: 3] = [999, 999, 999, 999, 999] (和pandas不太一样)

【集合运算符】
    key in s
    key not in s
    s1 == s2
    s1 != s2
    s1 <= s2 （s1是s2的子集）
    s1 < s2 （s1是s2的真子集）

    s1 | s2 并集（条件或）
    s1 & s2 交集（条件与）
    s1 - s2 差集
    s1 ^ s2 对称差分（补集的并集）

    注意！在使用set定义集合之后，顺序已经按照系统默认进行确定
【字典运算符】

【扩展赋值运算】

"""
a = 1
b = a
print(a is b)

print(1 << 2)

a = [1, 2, 5]
print(3 * a)

a = [i for i in range(10)]
print(a[9: 1: -1])
# 步长k为负, 但是i和k也要颠倒过来

a[1: 3] = [99, 99]
print(a)
del a[1: 3]
a[1: 3] = [999, 999, 999, 999, 999]

print("amp" in "example")
print([1, 2] in [1, 2, 3])
print([1, 2] in [1, 2, 3, [1, 2]])
print([1, 2] <= [1, 2, 3])